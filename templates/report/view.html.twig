{% extends 'base.html.twig' %}
{% import 'macros/table.twig' as table %}

{% block title %}Отчет по форме: {{ feedback.name }}{% endblock %}

{% block body %}
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="{{ path('report_index') }}">Отчеты</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                {{ feedback.name }}
            </li>
        </ol>
    </nav>

    <h1>Отчет: {{ feedback.name }}</h1>

    <div class="mb-3 d-flex align-items-center gap-2">
        <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#fieldModal">
            Выбрать вопросы
        </button>

        <form method="get" action="{{ path('report_view', {feedback: feedback.id}) }}">
            {% for field in fields %}
                <input type="hidden" name="fields[]" value="{{ field.id }}" class="field-hidden" data-label="{{ field.label }}">
            {% endfor %}
            <input type="hidden" name="export" value="excel">
            <button type="submit" class="btn btn-success">
                Скачать Excel
            </button>
        </form>
    </div>

<form method="get" id="filtersForm" novalidate>
    <table class="table table-bordered table-striped">
        <thead class="align-middle">
        <tr>
            <th>#</th>
            <th>Дата</th>
            <th>Клиент</th>
            {% for field in fields %}
                <th class="field-col field-{{ field.id }} text-wrap text-break" style="max-width: 200px; min-width: 150px;">
                    {{ field.label }}
                </th>
            {% endfor %}
        </tr>
        <tr>
            <th></th>
            <th>
                {{ table.filter_date({
                    idFrom: 'filter_created_from',
                    nameFrom: 'filter_created_from',
                    valueFrom: filters.createdFrom ? filters.createdFrom|date('Y-m-d') : '',
                    idTo: 'filter_created_to',
                    nameTo: 'filter_created_to',
                    valueTo: filters.createdTo ? filters.createdTo|date('Y-m-d') : ''
                }) }}
            </th>
            <th>
                {{ table.filter_input('filter_name_id', 'filter_name', filters.clientName, '', 'auto-submit') }}
            </th>
            {% for field in fields %}
                <th class="field-col field-{{ field.id }}">
                    {{ table.filter_input(
                        'filter_code_' ~ field.code ~ '_id',
                        'filter_code_' ~ field.code,
                        filters.codeFilters[field.code]|default(''),
                        '',
                        'auto-submit'
                    ) }}
                </th>
            {% endfor %}
        </tr>
        </thead>
        <tbody>
        {% for submissionId, answerRow in answers %}
            <tr>
                <td>{{ submissionId + 1 }}</td>
                <td>{{ answerRow[fields[0].label][1]|date('Y-m-d H:i') }}</td>
                {% set clientId = answerRow[fields[0].label][3]|default(null) %}
                <td>
                    {% if clientId %}
                        <a href="{{ path('sync_client_view', {id: clientId}) }}">
                            {{ answerRow[fields[0].label][2]|default('—') }}
                        </a>
                    {% else %}
                        {{ answerRow[fields[0].label][2]|default('—') }}
                    {% endif %}
                </td>

                {% for field in fields %}
                    <td class="field-col field-{{ field.id }} text-wrap text-break" style="max-width: 200px; min-width: 150px; white-space: normal;">
                        {{ answerRow[field.label][0]|default('—') }}
                    </td>
                {% endfor %}
            </tr>
        {% else %}
            <tr>
                <td colspan="{{ fields|length + 3 }}">Данных нет</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</form>

    {# Модалка выбора полей #}
    <div class="modal fade" id="fieldModal" tabindex="-1" aria-labelledby="fieldModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Выбор вопросов</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <form id="fieldForm">
                        {% for field in fields %}
                            <div class="form-check">
                                <input class="form-check-input field-toggle" type="checkbox" value="{{ field.id }}" id="fieldCheck{{ field.id }}" checked>
                                <label class="form-check-label" for="fieldCheck{{ field.id }}">
                                    {{ field.label }}
                                </label>
                            </div>
                        {% endfor %}
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="button" class="btn btn-primary" id="applyFields">Применить</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('applyFields').addEventListener('click', function () {
            const allToggles = document.querySelectorAll('.field-toggle');
            const hiddenInputs = document.querySelectorAll('.field-hidden');

            allToggles.forEach(toggle => {
                const fieldId = toggle.value;
                const cells = document.querySelectorAll('.field-' + fieldId);
                const hiddenInput = Array.from(hiddenInputs).find(input => input.value === fieldId);

                if (toggle.checked) {
                    cells.forEach(cell => cell.style.display = '');
                    if (!hiddenInput) {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = 'fields[]';
                        input.value = fieldId;
                        input.className = 'field-hidden';
                        document.querySelector('form').appendChild(input);
                    }
                } else {
                    cells.forEach(cell => cell.style.display = 'none');
                    if (hiddenInput) hiddenInput.remove();
                }
            });

            const modal = bootstrap.Modal.getInstance(document.getElementById('fieldModal'));
            modal.hide();
        });
    </script>
{% endblock %}
